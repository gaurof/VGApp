@model VGAppDb.Models.Game

<div class="game-detail-page">
    <div class="game-background" style="background-image: url('@Model.BackgroundUrl')"></div>

    <div class="container game-content">
        <div class="game-poster-container">
            <img src="@Model.PosterUrl" alt="@Model.Name" class="game-poster">
        </div>

        <div class="game-info">
            <h1 class="game-title">@Model.Name</h1>
            <span class="game-release-year">@Model.ReleaseDate.Year</span>

            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="game-description">
                    @Model.Description
                </div>
            }

            <!-- Rating display -->
            <div class="game-rating">
                @if (Model.Reviews.Any(r => r.Rating.HasValue))
                {
                    var averageRating = Model.Reviews.Where(r => r.Rating.HasValue).Average(r => r.Rating.Value);
                    <div class="average-rating">
                        Rating: @Math.Round(averageRating, 1)/5
                        <div class="stars" data-rating="@averageRating"></div>
                        <span>(@Model.Reviews.Count reviews)</span>
                    </div>
                }
                else
                {
                    <div>No ratings yet</div>
                }
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="reviews-container">
        <h2>Player Reviews</h2>

        <!-- Review Form -->
        <div class="review-form">
            <h3>Add Your Review</h3>
            <form asp-action="AddReview" method="post" id="reviewForm">
                <input type="hidden" name="gameId" value="@Model.Id" />
                <input type="hidden" name="rating" id="selectedRating" value="" required />

                <div class="form-group">
                    <label>Your Rating:</label>
                    <div class="star-rating">
                        @for (float i = 1; i <= 5; i++)
                        {
                            <i class="far fa-star" data-rating="@i"></i>
                        }
                        <span class="rating-text">Select a rating</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="text">Your Review (optional):</label>
                    <textarea name="text" id="text" class="form-control" rows="4"></textarea>
                </div>

                <button type="submit" class="btn btn-primary">Submit Review</button>
            </form>
        </div>

        <!-- Reviews List -->
        <div class="reviews-list">
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.Rating))
            {
                <div class="review-item">
                    <div class="review-rating">
                        <div class="stars" data-rating="@review.Rating"></div>
                    </div>
                    @if (!string.IsNullOrEmpty(review.Text))
                    {
                        <div class="review-text">@review.Text</div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Interactive star rating
        const stars = document.querySelectorAll('.star-rating i');
        const ratingInput = document.getElementById('selectedRating');
        const ratingText = document.querySelector('.rating-text');

        stars.forEach(star => {
            star.addEventListener('click', setRating);
            star.addEventListener('mouseover', hoverRating);
            star.addEventListener('mouseout', resetStars);
        });

        function setRating(e) {
            const rating = e.target.dataset.rating;
            ratingInput.value = rating;
            updateStars(rating);
            ratingText.textContent = `${rating} star${rating == 1 ? '' : 's'}`;
        }

        function hoverRating(e) {
            const hoverRating = e.target.dataset.rating;
            updateStars(hoverRating, false);
        }

        function resetStars() {
            const currentRating = ratingInput.value || 0;
            updateStars(currentRating);
        }

        function updateStars(rating, updateText = true) {
            stars.forEach(star => {
                const starRating = star.dataset.rating;
                star.classList.remove('fas', 'far', 'fa-star-half-alt');

                if (starRating <= rating) {
                    star.classList.add('fas');
                } else if (starRating - 0.5 <= rating) {
                    star.classList.add('fas', 'fa-star-half-alt');
                } else {
                    star.classList.add('far');
                }
            });

            if (updateText) {
                ratingText.textContent = rating > 0
                    ? `${rating} star${rating == 1 ? '' : 's'}`
                    : 'Select a rating';
            }
        }

        // Form validation
        document.getElementById('reviewForm').addEventListener('submit', function(e) {
            if (!ratingInput.value) {
                e.preventDefault();
                ratingText.textContent = 'Please select a rating';
                ratingText.style.color = 'red';
            }
        });

        // Display existing reviews' stars
        document.querySelectorAll('.stars[data-rating]').forEach(container => {
            const rating = parseFloat(container.dataset.rating);
            container.innerHTML = getStars(rating);
        });

        function getStars(rating) {
            if (isNaN(rating)) return '';

            let stars = '';
            const fullStars = Math.floor(rating);
            const hasHalfStar = rating % 1 >= 0.5;

            for (let i = 1; i <= 5; i++) {
                if (i <= fullStars) {
                    stars += '<i class="fas fa-star"></i>';
                } else if (i === fullStars + 1 && hasHalfStar) {
                    stars += '<i class="fas fa-star-half-alt"></i>';
                } else {
                    stars += '<i class="far fa-star"></i>';
                }
            }

            return stars;
        }
    </script>
}